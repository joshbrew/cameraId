var __require=(x=>typeof require!=="undefined"?require:typeof Proxy!=="undefined"?new Proxy(x,{get:(a,b)=>(typeof require!=="undefined"?require:a)[b]}):x)(function(x){if(typeof require!=="undefined")return require.apply(this,arguments);throw Error('Dynamic require of "'+x+'" is not supported')});var BoundingBoxTool=class{sourceElement;overlayCanvas;ctx;options;boxes;isDrawing;startX;startY;currentBox;currentBoxIndex;isResizing=false;resizingEdge;justFocused=false;resizeObserver;originalWidth;originalHeight;constructor(sourceElement,options){this.sourceElement=sourceElement;this.overlayCanvas=options.overlayCanvas?options.overlayCanvas:document.createElement("canvas");if(!options.overlayCanvas)sourceElement.parentNode?.appendChild(this.overlayCanvas);this.ctx=this.overlayCanvas.getContext("2d");this.options=options||{};this.boxes=[];this.overlayCanvas.addEventListener("mousedown",e=>this.handleMouseDown(e));this.overlayCanvas.addEventListener("mousemove",e=>this.handleMouseMove(e));this.overlayCanvas.addEventListener("mouseup",e=>this.handleMouseUp(e));this.sourceElement.onload=()=>{this.overlayCanvas.width=this.sourceElement.width;this.overlayCanvas.height=this.sourceElement.height};this.resizeObserver=new ResizeObserver(entries=>{for(let entry of entries){if(entry.target===this.sourceElement){this.resizeCanvas()}}});this.originalWidth=sourceElement.offsetWidth;this.originalHeight=sourceElement.offsetHeight;this.resizeObserver.observe(this.sourceElement);this.sourceElement.addEventListener("click",()=>{this.resizeCanvas()});this.overlayCanvas.style.position=`absolute`;this.updateCanvasSize()}updateCanvasSize=()=>{this.overlayCanvas.width=this.sourceElement.clientWidth;this.overlayCanvas.height=this.sourceElement.clientHeight;this.overlayCanvas.style.width=`${this.sourceElement.clientWidth}`;this.overlayCanvas.style.height=`${this.sourceElement.clientHeight}`;this.updateCanvasPosition()};updateCanvasPosition=()=>{const rect=this.sourceElement.getBoundingClientRect();this.overlayCanvas.style.left=`${rect.left}px`;this.overlayCanvas.style.top=`${rect.top}px`};updateBoxesAndLabels=()=>{const newWidth=this.sourceElement.offsetWidth;const newHeight=this.sourceElement.offsetHeight;const scaleX=newWidth/this.originalWidth;const scaleY=newHeight/this.originalHeight;this.boxes=this.boxes.map(box=>{const scaledX=box.rect.x*scaleX;const scaledY=box.rect.y*scaleY;const scaledWidth=box.rect.width*scaleX;const scaledHeight=box.rect.height*scaleY;const labelSpan=document.getElementById(`label_${box.id}`);if(labelSpan){labelSpan.style.left=`${scaledX}px`;labelSpan.style.top=`${scaledY-10}px`}return{...box,rect:{x:scaledX,y:scaledY,width:scaledWidth,height:scaledHeight}}});this.originalWidth=newWidth;this.originalHeight=newHeight;this.redrawCanvas()};resizeCanvas=()=>{this.updateCanvasSize();this.updateBoxesAndLabels()};findBoxEdge(mouseEvent){const mousePos={x:mouseEvent.offsetX,y:mouseEvent.offsetY};const threshold=10;for(let i=this.boxes.length-1;i>=0;i--){const box=this.boxes[i].rect;const edge=this.getResizingEdge(mousePos,box,threshold);if(Object.values(edge).includes(true)){this.resizingEdge=edge;return i}}return-1}handleMouseDown(event){if(this.justFocused){this.justFocused=false;return}const canvasRect=this.overlayCanvas.getBoundingClientRect();this.startX=event.clientX-canvasRect.left;this.startY=event.clientY-canvasRect.top;const clickedBoxIndex=this.findBoxEdge(event);if(clickedBoxIndex!==-1){this.isDrawing=false;this.isResizing=true;this.currentBoxIndex=clickedBoxIndex;this.currentBox=this.boxes[clickedBoxIndex]}else{this.isDrawing=true}}handleMouseMove(event){const canvasRect=this.overlayCanvas.getBoundingClientRect();const mouseX=event.clientX-canvasRect.left;const mouseY=event.clientY-canvasRect.top;if(this.isResizing){this.resizeBox({offsetX:mouseX,offsetY:mouseY},this.currentBox.rect,this.resizingEdge);this.redrawCanvas()}else if(this.isDrawing){this.redrawCanvas();this.drawBoundingBox(this.startX,this.startY,mouseX-this.startX,mouseY-this.startY)}}handleMouseUp(event){if(this.isResizing){this.isResizing=false;if(this.options.onedited){this.options.onedited(this.currentBox,this.boxes,this.sourceElement,this.overlayCanvas,this.ctx)}}else if(this.isDrawing){this.isDrawing=false;const canvasRect=this.overlayCanvas.getBoundingClientRect();const endX=event.clientX-canvasRect.left;const endY=event.clientY-canvasRect.top;if(Math.abs(endX-this.startX)>0&&Math.abs(endY-this.startY)>0){const newBox={rect:this.getBoundingBoxRect(this.startX,this.startY,endX,endY),label:"",id:Math.floor(Math.random()*1e15)};this.boxes.push(newBox);this.createLabelInput(newBox);this.redrawCanvas();if(this.options.oncreate){this.options.oncreate(newBox,this.boxes,this.sourceElement,this.overlayCanvas,this.ctx)}}}}getScale=()=>{const sourceWidth=this.sourceElement.naturalWidth||this.sourceElement.videoWidth||this.sourceElement.width;const sourceHeight=this.sourceElement.naturalHeight||this.sourceElement.videoHeight||this.sourceElement.height;return{x:sourceWidth/this.overlayCanvas.width,y:sourceHeight/this.overlayCanvas.height}};getInverseScale=()=>{const scale=this.getScale();return{x:1/scale.x,y:1/scale.y}};getBoundingBoxRect=(x0,y0,x1,y1)=>{const scale=this.getScale();let left=Math.min(x0,x1)*scale.x;let top=Math.min(y0,y1)*scale.y;let right=Math.max(x0,x1)*scale.x;let bottom=Math.max(y0,y1)*scale.y;return{x:left,y:top,width:right-left,height:bottom-top}};drawBoundingBox=(x,y,width,height)=>{this.ctx.beginPath();this.ctx.lineWidth=2;this.ctx.rect(x,y,width,height);this.ctx.strokeStyle=this.options.color||"orange";this.ctx.stroke()};redrawCanvas=()=>{this.ctx.clearRect(0,0,this.overlayCanvas.width,this.overlayCanvas.height);const inverseScale=this.getInverseScale();this.boxes.forEach(box=>{const scaledX=box.rect.x*inverseScale.x;const scaledY=box.rect.y*inverseScale.y;const scaledWidth=box.rect.width*inverseScale.x;const scaledHeight=box.rect.height*inverseScale.y;this.drawBoundingBox(scaledX,scaledY,scaledWidth,scaledHeight);if(box.label){this.drawLabel(box)}})};getResizingEdge(mousePos,boxRect,threshold){let edge={top:false,right:false,bottom:false,left:false};let scale=this.getInverseScale();const scaledBoxRect={x:boxRect.x*scale.x,y:boxRect.y*scale.y,width:boxRect.width*scale.x,height:boxRect.height*scale.y};const insideHorizontalBounds=mousePos.x>=scaledBoxRect.x*scale.x-threshold&&mousePos.x<=scaledBoxRect.x+scaledBoxRect.width+threshold;const insideVerticalBounds=mousePos.y>=scaledBoxRect.y-threshold&&mousePos.y<=scaledBoxRect.y+scaledBoxRect.height+threshold;if(insideHorizontalBounds){if(Math.abs(mousePos.y-scaledBoxRect.y)<threshold){edge.top=true}else if(Math.abs(scaledBoxRect.y+scaledBoxRect.height-mousePos.y)<threshold){edge.bottom=true}}if(insideVerticalBounds){if(Math.abs(mousePos.x-scaledBoxRect.x)<threshold){edge.left=true}else if(Math.abs(scaledBoxRect.x+scaledBoxRect.width-mousePos.x)<threshold){edge.right=true}}return edge}resizeBox=(mouseEvent,boxRect,resizingEdge)=>{const scale=this.getScale();const mouseX=mouseEvent.offsetX*scale.x;const mouseY=mouseEvent.offsetY*scale.y;const dx=mouseX-this.startX*scale.x;const dy=mouseY-this.startY*scale.y;if(resizingEdge.right){boxRect.width+=dx}else if(resizingEdge.left){boxRect.width-=dx;boxRect.x+=dx}if(resizingEdge.bottom){boxRect.height+=dy}else if(resizingEdge.top){boxRect.height-=dy;boxRect.y+=dy}if(boxRect.width<0){boxRect.x+=boxRect.width;boxRect.width=-boxRect.width}if(boxRect.height<0){boxRect.y+=boxRect.height;boxRect.height=-boxRect.height}this.updateLabelPosition(this.currentBox);this.startX=mouseEvent.offsetX;this.startY=mouseEvent.offsetY};updateLabelPosition=box=>{const scale=this.getInverseScale();const labelContainer=document.getElementById(`label_container_${box.id}`);if(labelContainer){let labelX=box.rect.x*scale.x;let labelY=box.rect.y*scale.y+10;if(labelY<20){labelY=box.rect.y*scale.y+box.rect.height*scale.y+10}labelX=Math.max(0,Math.min(labelX,this.overlayCanvas.width-labelContainer.offsetWidth));labelContainer.style.left=`${labelX}px`;labelContainer.style.top=`${labelY}px`}};drawLabel=box=>{let labelContainer=document.getElementById(`label_container_${box.id}`);if(!labelContainer){labelContainer=document.createElement("div");labelContainer.id=`label_container_${box.id}`;labelContainer.style.position="absolute";labelContainer.style.color=this.options.labelColor||"black";labelContainer.style.zIndex="1000";labelContainer.style.display="flex";labelContainer.style.alignItems="center";document.body.appendChild(labelContainer)}else{labelContainer.innerHTML=""}const scale=this.getInverseScale();let labelX=box.rect.x*scale.x;let labelY=box.rect.y*scale.y+10;if(labelY<20){labelY=box.rect.y*scale.y+box.rect.height*scale.y+10}labelX=Math.max(0,Math.min(labelX,this.overlayCanvas.width-labelContainer.offsetWidth));labelContainer.style.left=`${labelX}px`;labelContainer.style.top=`${labelY}px`;const deleteBtn=document.createElement("button");deleteBtn.textContent="X";deleteBtn.style.marginRight="5px";deleteBtn.onclick=()=>{this.deleteBox(box.id)};labelContainer.appendChild(deleteBtn);const labelSpan=document.createElement("span");labelSpan.textContent=box.label||"Edit";labelSpan.style.padding="2px 4px";labelSpan.style.cursor="text";labelSpan.style.minWidth="20px";labelSpan.onclick=()=>{const labelInput=document.createElement("input");labelInput.type="text";labelInput.value=box.label;labelInput.style.border="none";labelInput.style.padding="2px 4px";let keydownlistener=e=>{if(e.key==="Enter"){labelInput.blur()}};window.addEventListener("keydown",keydownlistener);labelInput.onblur=()=>{window.removeEventListener("keydown",keydownlistener);this.justFocused=false;const prevLabel=box.label;box.label=labelInput.value;labelSpan.textContent=box.label||"Edit";labelSpan.style.textShadow="1px 2px red, 0 0 1em blue, 0 0 0.2em blue";labelContainer.replaceChild(labelSpan,labelInput);this.redrawCanvas();if(prevLabel!==box.label&&this.options.onedited){this.options.onedited(box,this.boxes,this.sourceElement,this.overlayCanvas,this.ctx)}};labelInput.onfocus=()=>{this.justFocused=true};labelContainer.replaceChild(labelInput,labelSpan);labelInput.focus()};labelContainer.appendChild(labelSpan);return{labelContainer,labelSpan}};createLabelInput=box=>{let{labelSpan}=this.drawLabel(box);labelSpan.click()};updateLabelProgrammatically=(boxId,newLabel)=>{const labelContainer=document.getElementById(`label_container_${boxId}`);if(!labelContainer){console.warn(`Label container for box ID ${boxId} not found.`);return}const labelInput=labelContainer.querySelector("input");if(labelInput&&document.activeElement===labelInput){labelInput.blur()}const labelSpan=labelContainer.querySelector("span");if(!labelSpan){console.warn(`Label span for box ID ${boxId} not found.`);return}labelSpan.textContent=newLabel||"Edit";const boxIndex=this.boxes.findIndex(box=>box.id===boxId);if(boxIndex!==-1){this.boxes[boxIndex].label=newLabel;if(this.options.onedited){this.options.onedited(this.boxes[boxIndex],this.boxes,this.sourceElement,this.overlayCanvas,this.ctx)}}else{console.warn(`Box with ID ${boxId} not found.`)}};deleteBox=id=>{const index=this.boxes.findIndex(box=>box.id===id);if(index!==-1){let spliced=this.boxes.splice(index,1);const labelContainer=document.getElementById(`label_container_${id}`);if(labelContainer)document.body.removeChild(labelContainer);this.redrawCanvas();if(this.options.ondelete)this.options.ondelete(spliced[0],this.boxes,this.sourceElement,this.overlayCanvas,this.ctx)}};clearBoundingBoxes(deleteCanvas){this.boxes.forEach(box=>{const labelContainer=document.getElementById(`label_container_${box.id}`);if(labelContainer){document.body.removeChild(labelContainer)}});this.boxes=[];this.ctx.clearRect(0,0,this.overlayCanvas.width,this.overlayCanvas.height);if(deleteCanvas)this.deleteCanvas()}deleteCanvas(){if(this.overlayCanvas&&this.overlayCanvas.parentNode){this.overlayCanvas.parentNode.removeChild(this.overlayCanvas)}if(this.resizeObserver){this.resizeObserver.unobserve(this.sourceElement);this.resizeObserver=void 0}}};var MediaElementCreator=class{fileInput;videoSelect;parentElement;mediaOptions;currentMediaElement=null;oncreate;onstarted;ondelete;onended;ontargetchanged;constructor(parentElement,callbacks,mediaOptions,autostart=true){this.parentElement=parentElement;this.mediaOptions=mediaOptions||{audio:false,video:{optional:[{minWidth:320},{minWidth:640},{minWidth:1024},{minWidth:1280},{minWidth:1920},{minWidth:2560},{minWidth:3840}]}};this.oncreate=callbacks?.oncreate;this.onstarted=callbacks?.onstarted;this.ondelete=callbacks?.ondelete;this.ontargetchanged=callbacks?.ontargetchanged;let controlsDiv=document.createElement("div");this.parentElement.appendChild(controlsDiv);this.createFileInputElement(controlsDiv);this.createVideoSelectElement(controlsDiv);if(autostart)setTimeout(()=>{if(this.videoSelect.value)this.getVideoStream({audio:false,video:{width:{min:480,ideal:3840},height:{min:320,ideal:2160},deviceId:this.videoSelect.value}})},100)}createFileInputElement(parent){this.fileInput=document.createElement("input");this.fileInput.type="file";this.fileInput.accept="image/*, video/*";this.fileInput.addEventListener("change",event=>{const target=event.target;if(target.files&&target.files[0]){const file=target.files[0];this.createMediaElement(file)}});this.fileInput.onclick=ev=>{this.fileInput.value=""};parent.appendChild(this.fileInput)}createVideoSelectElement(parent){this.videoSelect=document.createElement("select");this.setupVideoInputOptions();parent.appendChild(this.videoSelect);let button=document.createElement("button");button.innerHTML="Stream";button.onclick=()=>{this.setStream()};parent.appendChild(button)}setStream=()=>{const options={...this.mediaOptions,video:{width:{min:480,ideal:3840},height:{min:320,ideal:2160},deviceId:this.videoSelect.value}};this.getVideoStream(options)};async setupVideoInputOptions(){const devices=await navigator.mediaDevices.enumerateDevices();const videoDevices=devices.filter(device=>device.kind==="videoinput");this.videoSelect.innerHTML=videoDevices.map(device=>`<option value="${device.deviceId}">${device.label||device.deviceId}</option>`).join("");this.videoSelect.addEventListener("change",this.setStream)}async getVideoStream(options){try{const stream=await navigator.mediaDevices.getUserMedia(options);this.createVideoElement(stream,options?.video?.deviceId)}catch(error){console.error("Error accessing the webcam",error)}}createMediaElement(file){const url2=URL.createObjectURL(file);if(this.oncreate)this.oncreate(file.name,null);if(file.type.startsWith("image/")){this.createImageElement(url2)}else if(file.type.startsWith("video/")){this.createVideoElement(url2)}else{console.error("Unsupported file type:",file.type)}}createImageElement(src){const image=new Image;image.src=src;image.onload=()=>{this.deinitMediaElement();this.parentElement.appendChild(image);this.currentMediaElement=image;if(this.ontargetchanged)this.ontargetchanged(src,image)}}createVideoElement(src,deviceId){const video=document.createElement("video");video.autoplay=true;video.muted=true;if(typeof src==="string"){video.src=src;if(this.oncreate)this.oncreate(src,video)}else{video.srcObject=src;video.onloadedmetadata=()=>{if(this.onstarted)this.onstarted(deviceId,video)}}video.onplay=()=>{if(this.onstarted)this.onstarted(deviceId||video.src,video)};video.onended=()=>{if(this.onended)this.onended(video.src||deviceId,video)};this.deinitMediaElement();this.parentElement.appendChild(video);this.currentMediaElement=video;if(this.ontargetchanged)this.ontargetchanged(deviceId||video.src,video)}deinitMediaElement(){if(this.currentMediaElement){if(this.currentMediaElement instanceof HTMLVideoElement&&this.currentMediaElement.srcObject){const tracks=this.currentMediaElement.srcObject.getTracks();tracks.forEach(track=>track.stop())}if(this.ondelete)this.ondelete(this.currentMediaElement.src||this.currentMediaElement.srcObject,this.currentMediaElement);this.currentMediaElement.remove();this.currentMediaElement=null}}};function K(i=y=>y,{imports:R,message:g,transfer:r,port:n,blocking:l,pool:f,loop:p2,animate:T,callback:P}={}){return new Promise((y,S)=>{let O;if(typeof i!="function"){if(typeof i=="string"&&i.startsWith("./")){let s=location.origin,t=location.pathname.split("/");t.pop();let c=t.join("/");c.startsWith("http")?s+="/":s+=c+"/",i=s+i}O=i}else O=N(i,R);let M=s=>{let t={},c=false;s.onmessage=a=>{for(let e in t)t[e](a.data.message,a.data.cb)},s.onerror=a=>{console.error(new Error("Worker encountered an error: "+a.message))};let d=(a,e,o)=>new Promise((b,u)=>{if(!o&&s.PORTS)s.postMessage({message:a,overridePort:o},e),b(true);else{if(l){if(c)return new Promise((h,k)=>{k("Thread Blocked")});c=true}let E=Math.random();t[E]=(h,k)=>{E===k&&(delete t[E],l&&(c=false),b(h))},s.postMessage({message:a,cb:E,overridePort:o},e)}}),m={run:(a,e,o)=>d(a,e,o),terminate:()=>{if(URL.revokeObjectURL(O),s.terminate(),s.PORTS){let a=(e,o)=>{e.postMessage({COMMAND:{DELETED:s.id}})};s.PORTS.forEach(a)}},addPort:a=>W(s,a,l),addCallback:(a=o=>{},e)=>{let o=Math.random();return t[o]=e?b=>{a(b),delete t[o]}:a,o},removeCallback:a=>{delete m.callbacks[a]},setLoop:(a,e,o)=>{s.postMessage({message:e,COMMAND:{SETLOOP:a}},o)},setAnimation:(a,e)=>{s.postMessage({message:a,COMMAND:{SETANIM:true}},e)},stop:()=>{s.postMessage({COMMAND:{STOP:true}})},worker:s,callbacks:t,id:s.id};return P&&m.addCallback(P),p2?m.setLoop(p2,g,r):T&&m.setAnimation(g,r),m};if(f){let c=function(){let m=new Worker(O,R||typeof i!="function"?{type:"module"}:void 0),a=Math.random();return m.id=a,s[a]=m,a},s={},t={};for(let m=0;m<f;m++)c();let d=Object.keys(s);if(n&&d.forEach((m,a)=>{let e=s[m];Array.isArray(n)?n.length===d.length?W(e,n[a],l):n.forEach(o=>{W(e,o,l)}):W(e,n,l)}),g&&!p2&&!T)Promise.all(d.map((m,a)=>{let e=s[m],o=Array.isArray(g)?g[a]:g;return new Promise((b,u)=>{e.onmessage=h=>{Promise.resolve().then(()=>{e.terminate(),delete s[e.id]}),b(h.data.message)},e.onerror=h=>{Promise.resolve().then(()=>{e.terminate(),delete s[e.id]}),u(new Error("Worker encountered an error: "+h.message))};let E={message:o,oneOff:true};e.postMessage(E,r)})})).then(m=>{URL.revokeObjectURL(O),y(m)}).catch(m=>{URL.revokeObjectURL(O),Object.keys(s).map((a,e)=>{let o=s[a];o&&o.terminate(),delete s[a],delete t.helpers?.[a]}),S(m)});else{let m=0;Object.assign(t,{workers:s,helpers:{},keys:d,run:(e,o,b,u)=>{if(u)t.helpers[u]?.run(e,o);else if(Array.isArray(e)){let E=e.length;for(let h=0;h<E;h++)t.helpers[d[m]].run(e[h],o[h],b),m++,m>=d.length&&(m=0)}else t.helpers[d[m]].run(e,o,b),m++,m>=d.length&&(m=0)},terminate:e=>{function o(b){t.helpers[b]?.terminate(),delete t.helpers[b],delete t.workers[b]}e?o(e):d.forEach(o)},addWorker:()=>{let e=c(),o=s[e];return a(o),d.length=0,d.push(...d),e},addPort:(e,o)=>{function b(u){return t.helpers[u]?.addPort(e),true}return o?b(o):d.map(b)},addCallback:(e,o,b)=>{function u(E){return t.helpers[E]?.addCallback(e,o)}return b?u(b):d.map(u)},removeCallback:(e,o)=>{function b(u){return t.helpers[u]?.removeCallback(e),true}return o?b(o):d.map(b)},setLoop:(e,o,b,u)=>{function E(h){t.helpers[h]?.setLoop(e,o,b)}return u?E(u):d.map(E)},setAnimation:(e,o,b)=>{function u(E){t.helpers[E]?.setAnimation(e,o)}return b?u(b):d.map(u)},stop:e=>{function o(b){t.helpers[b]?.stop()}return e?o(e):d.map(o)}});let a=e=>{t.helpers[e.id]=M(e)};Object.keys(s).forEach((e,o)=>{a(s[e])}),y(t)}}else{let s=Math.random(),t=new Worker(O,R||typeof i!="function"?{type:"module"}:void 0);if(t.id=s,n&&(n.id||(n.id=Math.random()),Array.isArray(n)?n.map(c=>{W(t,c,l)}):W(t,n,l)),g&&!p2&&!T)t.onmessage=c=>{Promise.resolve().then(()=>{t.terminate(),URL.revokeObjectURL(O)}),y(c.data.message)},t.onerror=c=>{Promise.resolve().then(()=>{t.terminate(),URL.revokeObjectURL(O)}),S(new Error("Worker encountered an error: "+c.message))},t.postMessage({message:g,oneOff:true},r);else{let c=M(t);y(c)}}})}function C(i){let R=location.pathname.split("/");R.pop();let g=location.origin+R.join("/")+"/";return typeof i=="string"?(i.startsWith("./")&&(i=g+i),i.includes("import")?`${i}`:`import '${i}';`):Array.isArray(i)?i.map(r=>(r.startsWith("./")&&(r=g+r),r.includes("import")?r:`import '${r}';`)).join(`
`):typeof i=="object"?Object.entries(i).map(([n,l])=>(n.startsWith("./")&&(n=g+n),typeof l=="string"?`import ${l} from '${n}';`:typeof l=="boolean"&&l?`import '${n}'`:`import { ${Object.entries(l).map(([p2,T])=>typeof T=="string"?`${p2} as ${T}`:p2).join(", ")} } from '${n}';`)).join(`
`)+"":""}function W(i,R,g){let r=new MessageChannel;i.id||(i.id=Math.random()),R.id||(R.id=Math.random()),i.postMessage({COMMAND:{SENDER:r.port1,id:R.id,blocking:g}},[r.port1]),R.postMessage({COMMAND:{RECEIVER:r.port2,id:i.id,blocking:g}},[r.port2]),i.PORTS||(i.PORTS=[]),i.PORTS.push(R),R.PORTS||(R.PORTS=[]),R.PORTS.push(i)}var D=(i=()=>{})=>{globalThis.WORKER={};let R=(r,n,l,f)=>{if(globalThis.WORKER.SENDERS&&f!==true)if(f!==void 0&&f!=="both")globalThis.WORKER.SENDERS[f]&&(r?.message?globalThis.WORKER.SENDERS[f].postMessage({message:r.message,overridePort:r?.overridePort},r.transfer):globalThis.WORKER.SENDERS[f].postMessage({message:r,overridePort:r?.overridePort}));else{for(let p2 in globalThis.WORKER.SENDERS){if(globalThis.WORKER.BLOCKING[p2]){if(globalThis.WORKER.BLOCKED[p2]){console.error("Thread Blocked: "+p2);continue}globalThis.WORKER.BLOCKED[p2]=true}r?.message?globalThis.WORKER.SENDERS[p2].postMessage({message:r.message,overridePort:r?.overridePort},r.transfer):globalThis.WORKER.SENDERS[p2].postMessage({message:r,overridePort:r?.overridePort})}l&&postMessage(true)}(!globalThis.WORKER.SENDERS||f===true||f==="both")&&(r?.message?postMessage({message:r.message,cb:n,overridePort:r?.overridePort},r.transfer):postMessage({message:r,cb:n,overridePort:r?.overridePort}))},g=(r,n)=>{let l=i(r.data?.message);l?.then?l.then(f=>{n&&n.postMessage(true),R(f,r.data.cb,r.data.oneOff,r.data.overridePort)}):(n&&n.postMessage(true),R(l,r.data.cb,r.data.oneOff,r.data.overridePort))};globalThis.onmessage=r=>{if(r.data?.COMMAND){let n=r.data.COMMAND;if(typeof n.SETLOOP=="number"){globalThis.WORKER.LOOP&&clearTimeout(globalThis.WORKER.LOOP);let l=()=>{g(r),globalThis.WORKER.LOOP=setTimeout(()=>{l()},n.SETLOOP)};l()}if(n.SETANIM){globalThis.WORKER.ANIM&&cancelAnimationFrame(globalThis.WORKER.ANIM);let l=()=>{g(r),globalThis.WORKER.ANIM=requestAnimationFrame(()=>{l()})};l()}if(n.STOP&&(globalThis.WORKER.LOOP&&clearTimeout(globalThis.WORKER.LOOP),globalThis.WORKER.ANIM&&cancelAnimationFrame(globalThis.WORKER.ANIM)),n.RECEIVER){let l=n.blocking;globalThis.WORKER.RECEIVERS||(globalThis.WORKER.RTCR=0,globalThis.WORKER.RECEIVERS={});let f=n.id;globalThis.WORKER.RECEIVERS[f]=n.RECEIVER,globalThis.WORKER.RTCR++,n.RECEIVER.onmessage=p2=>{g(p2,l?n.RECEIVER:void 0)},n.RECEIVER.onerror=p2=>{delete globalThis.WORKER.RECEIVERS[f]}}if(n.SENDER){globalThis.WORKER.SENDERS||(globalThis.WORKER.PCTR=0,globalThis.WORKER.SENDERS={},globalThis.WORKER.BLOCKING={},globalThis.WORKER.BLOCKED={});let l=n.blocking,f=n.id?n.id:globalThis.WORKER.PCTR;globalThis.WORKER.SENDERS[f]=n.SENDER,globalThis.WORKER.PCTR++,l&&(globalThis.WORKER.BLOCKING[f]=true),n.SENDER.onmessage=p2=>{globalThis.WORKER.BLOCKING[f]&&(globalThis.WORKER.BLOCKED[f]=false)},n.SENDER.onerror=p2=>{delete globalThis.WORKER.SENDERS[f]}}n.DELETED&&(delete globalThis.WORKER.RECEIVERS?.[n.DELETED],delete globalThis.WORKER.SENDERS?.[n.DELETED])}else g(r)},globalThis.onerror=r=>{console.error(r)}};var L=D.toString();var N=(i,R)=>{let g=L.replace("()=>{}",i.toString()),n=`${C(R)}
(${g})()`,l=new Blob([n],{type:"application/javascript"});return URL.createObjectURL(l)};var I=K;async function initVideoProcessingThreads(decoderPool=4,modelName="inception-mnist.onnx",labelsName="mnist-labels.txt",inputName="input",outputName="output",outputWidth=64,outputHeight=64){const classifierThread=await I("./dist/wonnx.worker.js");classifierThread.run({command:"configure",modelName,labelsName,inputName,outputName,outputWidth,outputHeight});const canvasThread=await I(function(data){if(!data)return;if(data.canvas){if(!this.canvases){this.canvases={};this.contexts={}}this.canvases[data.cropIndex]=data.canvas;let ctx=data.canvas.getContext("2d");this.contexts[data.cropIndex]=ctx}if("draw"in data&&this.canvases?.[data.cropIndex]){if(data.width){this.canvases[data.cropIndex].width=data.width}if(data.height){this.canvases[data.cropIndex].height=data.height}this.contexts[data.cropIndex]?.drawImage(data.image,0,0,this.canvases[data.cropIndex].width,this.canvases[data.cropIndex].height)}else if("delete"in data&&this.canvases[data.cropIndex]){this.contexts[data.cropIndex].clearRect(0,0,this.canvases[data.cropIndex].width,this.canvases[data.cropIndex].height);delete this.canvases[data.cropIndex];delete this.contexts[data.cropIndex]}return true});const poolingThread=await I(async function(input){if(input.command?.includes("set")&&input.data){input.data.forEach(imgData=>{if(!imgData)return;if(!this.TempCaptures){this.TempCaptures={};this.TempImageData={};this.bufferLimit=100;this.bufferOrder=[]}this.bufferOrder.push(imgData.name);if(this.bufferOrder.length>this.bufferLimit){delete this.TempCaptures[this.bufferOrder[0]];delete this.TempImageData[this.bufferOrder[0]];this.bufferOrder.shift()}this.TempImageData[imgData.name]=imgData.bmp;delete imgData.bmp;this.TempCaptures[imgData.name]=imgData});return input.id}else if(input.command?.includes("getbmp")&&input.name){const capture=this.TempCaptures[input.name];const imgData=this.TempImageData[input.name];if(!capture?.image)return;return await new Promise((res,rej)=>{createImageBitmap(imgData,0,0,capture.width,capture.height).then(bmp=>{let captureCpy=Object.assign({draw:true},capture,{image:bmp});res({message:captureCpy,transfer:[bmp]})}).catch(rej)})}else if(input.command?.includes("get")&&input.name){const capture=Object.assign({},this.TempCaptures[input.name]);if(!capture?.image)return;let clone=new Uint8ClampedArray(capture.image.length);clone.set(capture.image);capture.image=clone;return{message:capture,transfer:[capture.image?.buffer?capture.image.buffer:capture.image]}}},{port:[classifierThread.worker,canvasThread.worker]});const videoDecoderThread=await I(async function(input){let image;if(input.image?.buffer){image=new ImageData(input.image,input.width,input.height)}else image=input.image;let result=[];for(let i=0;i<input.data.length;i++){const data=input.data[i];if(!data)return;if(!this.offscreen){this.offscreen=new OffscreenCanvas(data.outputWidth||data.cropW||input.width,data.outputHeight||data.cropH||input.height);this.backupOffscreen=new OffscreenCanvas(input.width,input.height);this.ctx=this.offscreen.getContext("2d",{willReadFrequently:true});this.bctx=this.backupOffscreen.getContext("2d",{willReadFrequently:true})}else{this.offscreen.width=data.outputWidth||data.cropW||input.width;this.offscreen.height=data.outputHeight||data.cropH||input.height}let bmp;if(image instanceof VideoFrame){console.log("x",data.cropX||0,"y",data.cropY||0,"w",data.cropW||input.width,"h",data.cropH||input.height,0,0,this.offscreen.width,this.offscreen.height);this.ctx.drawImage(image,data.cropX||0,data.cropY||0,data.cropW||input.width,data.cropH||input.height,0,0,this.offscreen.width,this.offscreen.height);if(i===input.data.length-1)image.close()}else{this.backupOffscreen.width=input.width;this.backupOffscreen.height=input.height;this.bctx.putImageData(image,0,0);this.ctx.drawImage(this.backupOffscreen,data.cropX||0,data.cropY||0,data.cropW||input.width,data.cropH||input.height,0,0,this.offscreen.width,this.offscreen.height)}bmp=await createImageBitmap(this.offscreen);let crop={...data,bmp,image:this.ctx.getImageData(0,0,this.offscreen.width,this.offscreen.height).data,width:this.offscreen.width,height:this.offscreen.height};result.push({message:crop,transfer:[crop.image.buffer,bmp]})}let output={message:{data:[],command:input.command,id:input.id},transfer:[],overridePort:input.overridePort};result.forEach(value=>{if(!value)return;output.message.data.push(value.message);output.transfer.push(...value.transfer)});return output},{port:[poolingThread.worker],pool:decoderPool});return{canvasThread,videoDecoderThread,poolingThread,classifierThread}}var ImageProcessor=class{id;Media;BBTool;threads;parentElement;container;outputWidth;outputHeight;poolCt=0;poolCtMaxIdx=3;threadRunning=false;classifierWait;classifierResults;canvasPool=[];constructor(parentElement=document.body,modelInpWidth=224,modelInpHeight=224){this.parentElement=parentElement;this.id=Math.random();const oncreate=(id,element)=>{console.log("Image, stream or video created with ID or URL:",id)};const onstarted=(id,element)=>{console.log("Stream or video started with ID or URL:",id)};const ondelete=(id,element)=>{console.log("Media element removed with ID or URL:",id)};const ontargetchanged=(id,element)=>{element.style.width="100%";this.BBTool?.clearBoundingBoxes(true);this.BBTool=new BoundingBoxTool(element,{color:"orange",labelColor:"orange",oncreate:(box,boxes)=>{console.log("Created",box,boxes)},onedited:(box,boxes)=>{console.log("Edited",box,boxes)},ondelete:(box,boxes)=>{console.log("Deleted",box,boxes)}});this.clearCanvases();console.log("Stream target changed with ID or URL:",id)};this.parentElement.insertAdjacentHTML("beforeend",`
            <div id="container${this.id}">
                <div id="controls${this.id}">
                    <button id="capture${this.id}">Capture</button>
                </div>
                <div id="mediaElm${this.id}"></div>
                <div id="results${this.id}"></div>
            </div>
        `);this.container=document.getElementById(`container${this.id}`);this.Media=new MediaElementCreator(document.getElementById(`mediaElm${this.id}`),{oncreate,onstarted,ondelete,ontargetchanged});this.outputWidth=modelInpWidth;this.outputHeight=modelInpHeight;this.initThreads(modelInpWidth,modelInpHeight);document.getElementById("capture"+this.id).onclick=()=>{this.processBoundingBoxes()}}async initThreads(outputWidth,outputHeight){let decoderPool=4;let modelName="opt-squeeze.onnx";let labelsName="squeeze-labels.txt";let inputName="data";let outputName="squeezenet0_flatten0_reshape0";this.threads=await initVideoProcessingThreads(decoderPool,modelName,labelsName,inputName,outputName,outputWidth,outputHeight);this.threads.classifierThread.addCallback(res=>{if(!res)return;console.timeEnd(`capture and inference ${res.name}`);console.log("classifier thread result: ",res);this.visualizeCapture(res);this.poolCt--});this.threads.videoDecoderThread.addCallback(res=>{console.log("videoDecoderThread thread result: ",res)});this.threads.poolingThread.addCallback(res=>{console.log("poolingThread result:",res)})}clearCanvases=()=>{for(let i=0;i<this.canvasPool.length;i++){this.threads.canvasThread.run({cropIndex:i,delete:true});document.getElementById("div"+i)?.remove()}this.canvasPool=[]};deinit(){for(const key in this.threads){this.threads[key].terminate()}this.container.remove()}getOrCreateCanvas(crop){if(this.canvasPool[crop.cropIndex]){let canvas=this.canvasPool[crop.cropIndex];return canvas}else{let canvas=document.createElement("canvas");canvas.id="canvas"+crop.cropIndex;canvas.width=crop.outputWidth;canvas.height=crop.outputHeight;this.canvasPool.push(canvas);canvas.style.maxWidth="100px";canvas.style.maxHeight="100px";let offscreen=canvas.transferControlToOffscreen();this.threads.canvasThread.run({canvas:offscreen,cropIndex:crop.cropIndex},[offscreen]);let canvasDiv=document.createElement("div");canvasDiv.id="div"+crop.cropIndex;canvasDiv.innerHTML=`
                <table>
                <tr>
                    <td id="canvas${crop.cropIndex}"></td>
                    <td id="output${crop.cropIndex}"></td>
                </tr>
                </table>
            `;document.getElementById(`results${this.id}`).appendChild(canvasDiv);document.getElementById(`canvas${crop.cropIndex}`).appendChild(canvas);return offscreen}}returnCanvasToPool(canvas){this.canvasPool.push(canvas)}getBoundingBoxData=()=>{if(this.canvasPool.length>this.BBTool.boxes.length){for(let i=this.BBTool.boxes.length;i<this.canvasPool.length;i++){this.threads.canvasThread.run({cropIndex:i,delete:true});document.getElementById("div"+i)?.remove()}this.canvasPool.length=this.BBTool.boxes.length}return this.BBTool.boxes.map((box,i)=>{return{name:box.id,cropX:box.rect.x,cropY:box.rect.y,cropW:box.rect.width,cropH:box.rect.height,outputWidth:this.outputWidth,outputHeight:this.outputHeight,cropIndex:i}})};processBoundingBoxes=async(data=this.getBoundingBoxData())=>{if(!this.Media.currentMediaElement)return;const timestamp=this.Media.currentMediaElement.currentTime||Date.now();const frame=new VideoFrame(this.Media.currentMediaElement,{timestamp:Date.now()});if(data.length===0){const sourceWidth=this.Media.currentMediaElement.naturalWidth||this.Media.currentMediaElement.videoWidth||this.Media.currentMediaElement.width;const sourceHeight=this.Media.currentMediaElement.naturalHeight||this.Media.currentMediaElement.videoHeight||this.Media.currentMediaElement.height;data.push({name:`${Date.now()}`,cropX:0,cropY:0,cropW:sourceWidth,cropH:sourceHeight,outputWidth:this.outputWidth,outputHeight:this.outputHeight,cropIndex:0})}if(data.length>0){let toDecode={image:frame,id:`${Date.now()}`,width:this.Media.currentMediaElement.videoWidth||this.Media.currentMediaElement.naturalWidth||this.Media.currentMediaElement.width,height:this.Media.currentMediaElement.videoHeight||this.Media.currentMediaElement.naturalHeight||this.Media.currentMediaElement.height,command:"set",timestamp,data,overridePort:true};if(this.poolCt===this.poolCtMaxIdx){this.classifierWait=new Promise(res=>{let id2=this.threads.classifierThread.addCallback(()=>{this.threads.classifierThread.removeCallback(id2);this.threadRunning=false;this.classifierWait=void 0;res(true)})});this.threadRunning=true}else if(this.classifierWait)await this.classifierWait;this.poolCt++;let id=this.threads.poolingThread.addCallback(out=>{if(out===toDecode.id){this.threads.poolingThread.removeCallback(id);for(const crop of data){console.time(`capture and inference ${crop.name}`);this.threads.poolingThread.run({command:"get",name:crop.name},void 0,this.threads.classifierThread.id);this.getOrCreateCanvas(crop);this.threads.poolingThread.run({command:"getbmp",name:crop.name},void 0,this.threads.canvasThread.id)}}});this.threads.videoDecoderThread.run(toDecode,[frame])}};visualizeCapture(classifierResult){if(classifierResult){document.getElementById("output"+classifierResult.cropIndex).innerHTML=`
                <table>
                    <tr style='background-color:blue;'>
                    <td><span style='font-weight:bold; background-color:blue;'>Image: </span>${classifierResult?.name}</td>
                    </tr>
                    <tr style='background-color:blue;'>
                    <td><span style='font-weight:bold; background-color:blue;'>Best Guess: </span>${classifierResult?.label}</td>
                    <td><span style='font-weight:bold;'>Probability: </span>${classifierResult?.maxProb?.toFixed(3)}</td>
                    <td><span style='font-weight:bold;'>Time: </span>${classifierResult?.inferenceTime?.toFixed(3)}</td>
                    </tr>
                </table>
            `;this.BBTool.updateLabelProgrammatically(classifierResult.name,classifierResult.label)}}};var url;if(typeof process!=="undefined"){try{if(typeof import.meta!=="undefined"){globalThis.__filename=fileURLToPath(import.meta.url);globalThis.__dirname=fileURLToPath(new URL(".",import.meta.url))}let p2=__require("path");url=p2.join(process.cwd(),__dirname,"wonnx.worker.js")}catch{}}else{let href=globalThis.location.href;let relLoc=href.split("/");relLoc.pop();relLoc=relLoc.join("/");url=relLoc+"/wonnx.worker.js"}var p=new ImageProcessor;
